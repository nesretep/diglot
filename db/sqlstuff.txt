++++++++++++++++++++++++++++++++++++++++++DATABASE CREATION+++++++++++++++++++++++++++++++++++++++++++++++++

CREATE DATABASE IF NOT EXISITS diglot 
  CHARACTER SET = 'utf8'
  COLLATE = 'utf32_general_ci';
++++++++++++++++++++++++++++++++++++++++++TABLE CREATION++++++++++++++++++++++++++++++++++++++++++++++++++++

CREATE TABLE IF NOT EXISTS "language here" (instance_id CHAR(16) NOT NULL PRIMARY KEY, master_position CHAR(12) NOT NULL, instance_text TEXT NOT NULL, chunk_id TEXT);

CREATE TABLE IF NOT EXISTS "language here"_media (instance_id CHAR(16) NOT NULL, CONSTRAINT `language_instance_id_constr` FOREIGN KEY (instance_id) REFERENCES "language here" (instance_id) ON DELETE CASCADE ON UPDATE RESTRICT, audio_path TEXT, definition MEDIUMTEXT) engine=innodb;

CREATE TABLE IF NOT EXISTS "language here"_tag (id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, instance_id CHAR(16) NOT NULL, instance_tag NOT NULL TEXT);

CREATE TABLE IF NOT EXISTS user_settings (user_id INT UNSIGNED NOT NULL AUTO_INCREMENT PRIMARY KEY, origin_lang CHAR(3), target_lang CHAR(3), current_position CHAR(9), user_level, SMALLINT UNSIGNED);

CREATE TABLE IF NOT EXISTS languages (iso_code CHAR(3) NOT NULL PRIMARY KEY, lang_name TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS "language here"_concept (chunk_id TEXT NOT NULL PRIMARY KEY, concept_id TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS "language here"_concept_data (concept_id TEXT NOT NULL, CONSTRAINT 'language_concept_id_constr' FOREIGN KEY (concept_id) REFERENCES "language here" (concept_id) ON DELETE CASCADE ON UPDATE RESTRICT, concept_freq UNSIGNED INT DEFAULT (0), score UNSIGNED INT DEFAULT (0)) engine=innodb;

CREATE TABLE IF NOT EXISTS flipped_list (id INT UNSIGNED NOT NULL AUTO INCREMENT PRIMARY KEY, user_id INT UNSIGNED NOT NULL, concept_id TEXT NOT NULL);

CREATE TABLE IF NOT EXISTS "language here"_concept_tag (id INT UNSIFNED NOT NULL AUTO INCREMENT PRIMARY KEY, concept_id TEXT NOT NULL, concept_tag TEXT NOT NULL);

++++++++++++++++++++++++++++++++++++++++++USER CREATION+++++++++++++++++++++++++++++++++++++++++++++++++++++

CREATE USER IF NOT EXISTS 'diglotadmin'@'localhost' IDENTIFIED BY 'password';
GRANT ALL PRIVILEGES ON  diglot.* to 'diglotadmin'@'localhost' WITH GRANT OPTION;

CREATE USER IF NOT EXISTS 'diglotapi'@'localhost' IDENTIFIED BY 'password';
GRANT SELECT on diglot.* to 'diglotapi'@'localhost';
GRANT UPDATE ON diglot.user_settings to 'diglotapi'@'localhost';
GRANT INSERT ON diglot.flipped_list to 'diglotapi'@'localhost';

diglotadmin - CYn8-T#qZ6-.8!@2

diglotapi - >EAj!mwzY(g39c#Q

++++++++++++++++++++++++++++++++++++++++++FUNCTION CREATION+++++++++++++++++++++++++++++++++++++++++++++++++

-- Name: flip_chunk
-- Version: 1.0
-- Parameters: v_pri_table = CHAR(3) the table of the primary language
-- 			   v_sec_table = CHAR(3) the table of the secondary language
--			   v_instance_id = CHAR(16) the instance_id of the primary language
--			   v_user_id = INT UNSIGNED the user_id of the user that we are tracking the chunk flip
--			   First grabs the matching chunk_id and insert it into the flipped_list table
--			   Next grabs the corresponding language instance_id and instance_text and returns it to the api
CREATE FUNCTION flip_chunk (v_pri_table CHAR(3), v_sec_table CHAR(3), v_instance_id CHAR(16), v_user_id INT UNSIGNED) 
	RETURNS TEXT
	DETERMINISTIC
BEGIN
	DECLARE v_chunk_id VARCHAR(15);
	DECLARE v_result TEXT;
	DECLARE v_master_position CHAR(12);

	select P.chunk_id
		from v_pri_table P
		where P.instance_id like v_instance_id into v_chunk_id;

	insert into flipped_list (user_id, chunk_id) VALUES (v_user_id, v_chunk_id);

	select P.master_position 
		from v_pri_table P 
		where P.instance_id like v_instance_id into v_master_position;
	
	select S.instance_id, S.instance_text
		from v_sec_table S
		where v_master_position = S.master_position
		into v_result;
	return (v_result);
END